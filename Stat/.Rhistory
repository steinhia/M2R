a<- tab$jour[which(tab$score=="0")]
b<- tab$condition[which(tab$score=="0")]
c<- (tab$score=="0")[which(tab$score=="0")]
d<- tab$id[which(tab$score=="0")]
e<- tab$histoire[which(tab$score=="0")]
f<- tab$type[which(tab$score=="0")]
tab3=data.table(jour=a,condition=b,score=c,id=d,histoire=e,type=f)
# nombre de 0
a<- sum(tab$score=='0')
# nombre de 1
tab2$jour <- as.factor(as.character(tab2$jour))
tab3$jour <- as.factor(as.character(tab3$jour))
tab2$condition <- factor(tab2$condition,levels = c("mains libres", "pédalage pieds", "pédalage mains","mains contraintes"))
### packages utilises
library(gamlss)
library(ggplot2)
library(data.table)
# splitFacet <- function(x){
#   facet_vars <- names(x$facet$params$facets)         # 1
#   x$facet    <- ggplot2::ggplot()$facet              # 2
#   datasets   <- split(x$data, x$data[facet_vars])    # 3
#   cat("var",facet_vars)
#   new_plots  <- lapply(datasets,function(new_data) { # 4
#     cat("var",facet_vars)
#     x$data <- new_data
#     x})
# }
#
#
#
# myplots3 <-
#   df %>%
#   split(ceiling(group_indices(.,z)/n_facets)) %>%
#   map(~ggplot(.,aes(x =x, y=y))+geom_point()+facet_wrap(~z))
#
# myplots3[[3]]
tgc <- summarySE(tab, measurevar="score", groupvars=c("jour","condition"))
p<-ggplot(tgc, aes(x=jour, y=score, fill=condition)) +
scale_fill_brewer() + theme_bw() +
geom_bar(position=position_dodge(), stat="identity" ,colour="black") +
geom_errorbar(aes(ymin=tgc$score-tgc$se, ymax=tgc$score+tgc$se),
width=.2,         # Width of the error bars
position=position_dodge(.9))
# ggtitle(paste("Scores en dénomination"))
p <- p + ylab("DENOM")+ labs(fill='CONDITION')+xlab("JOUR")+ylim(0,1)
p<- p + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
plot.title = element_text(family = "Helvetica", face = "bold", size = (20)),
legend.title=element_text(size=18), legend.text = element_text(size=16))
# p<- p+facet_grid(.~type)
p
###################################################### tableau de donnees #######################################
# score ~ jour + (re(random = ~1 | id)) -> pour les 3
# mu entre 0 et 1 : jour + (re(random = ~1 | id))
# nu O : ~jour + (re(random = ~1 | id))
# tau 1 : ~jour + (re(random = ~1 | id))
### importer tableau
setwd("~/Documents/Alex/Stat/")
source("summarySE.r")
tab <- read.table("../RecallTest/brut.csv",sep=",",header=TRUE)
### type variable
tab$id <- as.factor(tab$id)
tab$histoire <- as.factor(as.character(tab$histoire))
tab$condition[tab$condition=="0"] <- "MAINS_LIBRES"
tab$condition[tab$condition=="1"] <- "MAINS_CONTRAINTES"
tab$condition[tab$condition=="2"] <- "PEDALAGE_PIEDS"
tab$condition[tab$condition=="3"] <- "PEDALAGE_MAINS"
tab$condition <- factor(tab$condition,levels = c("MAINS_LIBRES", "PEDALAGE_PIEDS", "PEDALAGE_MAINS","MAINS_CONTRAINTES"))
tab$condition <- as.factor(tab$condition)
tab$nb0=as.factor(as.numeric((tab$score=='0')))
tab$jour[tab$jour=="1"]<-"J1"
tab$jour[tab$jour=="2"]<-"J2"
tab$jour[tab$jour=="3"]<-"J3"
tab$jour <- as.factor(as.character(tab$jour))
#tab$score<- as.factor(tab$score)
# score différent de 0
a<- tab$jour[which(tab$score!='0')] # & tab$score!='1')]
b<- tab$condition[which(tab$score!='0')]# & tab$score!='1')]
c<- tab$score[which(tab$score!='0')]#  & tab$score!='1')]
d<- tab$id[which(tab$score!='0')]#  & tab$score!='1')]
e<- tab$histoire[which(tab$score!='0')]#  & tab$score!='1')]
f<- tab$type[which(tab$score!='0')]#  & tab$score!='1')]
tab2=data.table(jour=a,condition=b,score=c,id=d,histoire=e,type=f)
# score différent == 0  ###et 1
a<- tab$jour[which(tab$score=="0")]
b<- tab$condition[which(tab$score=="0")]
c<- (tab$score=="0")[which(tab$score=="0")]
d<- tab$id[which(tab$score=="0")]
e<- tab$histoire[which(tab$score=="0")]
f<- tab$type[which(tab$score=="0")]
tab3=data.table(jour=a,condition=b,score=c,id=d,histoire=e,type=f)
# nombre de 0
a<- sum(tab$score=='0')
# nombre de 1
tab2$jour <- as.factor(as.character(tab2$jour))
tab3$jour <- as.factor(as.character(tab3$jour))
tab2$condition <- factor(tab2$condition,levels = c("mains libres", "pédalage pieds", "pédalage mains","mains contraintes"))
### packages utilises
library(gamlss)
library(ggplot2)
library(data.table)
# splitFacet <- function(x){
#   facet_vars <- names(x$facet$params$facets)         # 1
#   x$facet    <- ggplot2::ggplot()$facet              # 2
#   datasets   <- split(x$data, x$data[facet_vars])    # 3
#   cat("var",facet_vars)
#   new_plots  <- lapply(datasets,function(new_data) { # 4
#     cat("var",facet_vars)
#     x$data <- new_data
#     x})
# }
#
#
#
# myplots3 <-
#   df %>%
#   split(ceiling(group_indices(.,z)/n_facets)) %>%
#   map(~ggplot(.,aes(x =x, y=y))+geom_point()+facet_wrap(~z))
#
# myplots3[[3]]
tgc <- summarySE(tab, measurevar="score", groupvars=c("jour","condition"))
p<-ggplot(tgc, aes(x=jour, y=score, fill=condition)) +
scale_fill_brewer() + theme_bw() +
geom_bar(position=position_dodge(), stat="identity" ,colour="black") +
geom_errorbar(aes(ymin=tgc$score-tgc$se, ymax=tgc$score+tgc$se),
width=.2,         # Width of the error bars
position=position_dodge(.9))
# ggtitle(paste("Scores en dénomination"))
p <- p + ylab("DENOM")+ labs(fill='CONDITION')+xlab("JOUR")+ylim(0,1)
p<- p + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
plot.title = element_text(family = "Helvetica", face = "bold", size = (20)),
legend.title=element_text(size=18), legend.text = element_text(size=16))
# p<- p+facet_grid(.~type)
p
###################################################### tableau de donnees #######################################
#10.06 : on garde m2
# nbSyll~jour*condition + (1|id) +(1|histoire),
# on garde l'interaction chisq(3)=52.713  p= 2.111e-11
### importer tableau
setwd("~/Documents/Alex/Stat/")
source("summarySE.r")
tab <- read.table("../Transcription/csvFiles/brutDebit.csv",sep=",",header=TRUE)
### type variable
tab$id <- as.factor(as.character(tab$id))
tab$histoire <- as.factor(as.character(tab$histoire))
tab$condition[tab$condition=="0"] <- "MAINS_LIBRES"
tab$condition[tab$condition=="1"] <- "MAINS_CONTRAINTES"
tab$condition[tab$condition=="2"] <- "PEDALAGE_PIEDS"
tab$condition[tab$condition=="3"] <- "PEDALAGE_MAINS"
tab$condition <- factor(tab$condition,levels = c("MAINS_LIBRES", "PEDALAGE_PIEDS", "PEDALAGE_MAINS","MAINS_CONTRAINTES"))
tab$condition <- as.factor(tab$condition)
tab$jour[tab$jour=="1"]<-"J1"
tab$jour[tab$jour=="2"]<-"J2"
tab$jour[tab$jour=="3"]<-"J3"
tab$jour <- as.factor(as.character(tab$jour))
### packages utilises
library(multcomp)
library(lsmeans) # library(emmeans)
library(lme4)
library(DHARMa)
library(ggplot2)
##################################################### statistiques descriptives #######################################
tgc <- summarySE(tab, measurevar="nbSyll", groupvars=c("jour","condition"))
p<-ggplot(data=tgc, aes(x=jour, y=nbSyll, fill=condition)) +
scale_fill_brewer() + theme_bw() +
geom_bar(position=position_dodge(), stat="identity",colour="black") +
geom_errorbar(aes(ymin=tgc$nbSyll-tgc$se, ymax=tgc$nbSyll+tgc$se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
#  ggtitle("Nombre de syllabes total")
p <- p + ylab("NB SYLL")+ labs(fill='CONDITION') +xlab("JOUR")
p<- p + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
plot.title = element_text(family = "Helvetica", face = "bold", size = (20)),
legend.title=element_text(size=18), legend.text = element_text(size=16))
p
###################################################### tableau de donnees #######################################
#10.06 : on garde m2
# nbSyll~jour*condition + (1|id) +(1|histoire),
# on garde l'interaction chisq(3)=52.713  p= 2.111e-11
### importer tableau
setwd("~/Documents/Alex/Stat/")
source("summarySE.r")
tab <- read.table("../Transcription/csvFiles/brutDebit.csv",sep=",",header=TRUE)
### type variable
tab$id <- as.factor(as.character(tab$id))
tab$histoire <- as.factor(as.character(tab$histoire))
tab$condition[tab$condition=="0"] <- "MAINS_LIBRES"
tab$condition[tab$condition=="1"] <- "MAINS_CONTRAINTES"
tab$condition[tab$condition=="2"] <- "PEDALAGE_PIEDS"
tab$condition[tab$condition=="3"] <- "PEDALAGE_MAINS"
tab$condition <- factor(tab$condition,levels = c("MAINS_LIBRES", "PEDALAGE_PIEDS", "PEDALAGE_MAINS","MAINS_CONTRAINTES"))
tab$condition <- as.factor(tab$condition)
tab$jour[tab$jour=="1"]<-"J1"
tab$jour[tab$jour=="2"]<-"J2"
tab$jour[tab$jour=="3"]<-"J3"
tab$jour <- as.factor(as.character(tab$jour))
### packages utilises
library(multcomp)
library(lsmeans) # library(emmeans)
library(lme4)
library(DHARMa)
library(ggplot2)
##################################################### statistiques descriptives #######################################
tgc <- summarySE(tab, measurevar="nbSyll", groupvars=c("jour","condition"))
p<-ggplot(data=tgc, aes(x=jour, y=nbSyll, fill=condition)) +
scale_fill_brewer() + theme_bw() +
geom_bar(position=position_dodge(), stat="identity",colour="black") +
geom_errorbar(aes(ymin=tgc$nbSyll-tgc$se, ymax=tgc$nbSyll+tgc$se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
#  ggtitle("Nombre de syllabes total")
p <- p + ylab("NB SYLL")+ labs(fill='CONDITION') +xlab("JOUR")
p<- p + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
plot.title = element_text(family = "Helvetica", face = "bold", size = (20)),
legend.title=element_text(size=18), legend.text = element_text(size=16))
p
###################################################### tableau de donnees #######################################
# effet aléatoire différent selon le jour 10.15298  0.0014
# pas d'interaction 5.730498  0.1255
# pas condition 1.471167  0.6889
# pas jour 0.1246253  0.7241
setwd("~/Documents/Alex/Stat/")
source("summarySE.r")
tab <- read.table("../Transcription/csvFiles/brutDebit.csv",sep=",",header=TRUE)
# pê pédalage pieds != mains lbres
# pê mains contraintes != pédalage pieds
### type variable
tab$jour[tab$jour=="1"]<-"J1"
tab$jour[tab$jour=="2"]<-"J2"
tab$jour[tab$jour=="3"]<-"J3"
tab$jour <- as.factor(as.character(tab$jour))
tab$id <- as.factor(as.character(tab$id))
tab$histoire <- as.factor(as.character(tab$histoire))
tab$condition[tab$condition=="0"] <- "MAINS_LIBRES"
tab$condition[tab$condition=="1"] <- "MAINS_CONTRAINTES"
tab$condition[tab$condition=="2"] <- "PEDALAGE_PIEDS"
tab$condition[tab$condition=="3"] <- "PEDALAGE_MAINS"
tab$condition <- factor(tab$condition,levels = c("MAINS_LIBRES", "PEDALAGE_PIEDS", "PEDALAGE_MAINS","MAINS_CONTRAINTES"))
tab$condition <- as.factor(tab$condition)
### packages utilises
library(multcomp)
library(nlme)
library(ggplot2)
###################################################### statistiques descriptives #######################################
tgc <- summarySE(tab, measurevar="propHesit", groupvars=c("jour","condition"))
p<-ggplot(data=tgc, aes(x=jour, y=propHesit, fill=condition)) +
scale_fill_brewer() + theme_bw() +
geom_bar(position=position_dodge(), stat="identity",colour="black") +
geom_errorbar(aes(ymin=tgc$propHesit-tgc$se, ymax=tgc$propHesit+tgc$se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
#  ggtitle("Proportion d'hésitations en rappel libre")
p <- p + ylab("PROP HESIT (%)")+ labs(fill='CONDITION') + xlab('JOUR')
p <- p + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
plot.title = element_text(family = "Helvetica", face = "bold", size = (20)),
legend.title=element_text(size=18), legend.text = element_text(size=16))
p
tgc <- summarySE(tab, measurevar="nbHesit", groupvars=c("jour","condition"))
p<-ggplot(data=tgc, aes(x=jour, y=propHesit, fill=condition)) +
scale_fill_brewer() + theme_bw() +
geom_bar(position=position_dodge(), stat="identity",colour="black") +
geom_errorbar(aes(ymin=tgc$nbHesit-tgc$se, ymax=tgc$nbHesit+tgc$se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
#  ggtitle("Proportion d'hésitations en rappel libre")
p <- p + ylab("PROP HESIT (%)")+ labs(fill='CONDITION') + xlab('JOUR')
p <- p + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
plot.title = element_text(family = "Helvetica", face = "bold", size = (20)),
legend.title=element_text(size=18), legend.text = element_text(size=16))
p
tgc <- summarySE(tab, measurevar="nbHesit", groupvars=c("jour","condition"))
p<-ggplot(data=tgc, aes(x=jour, y=nbHesit, fill=condition)) +
scale_fill_brewer() + theme_bw() +
geom_bar(position=position_dodge(), stat="identity",colour="black") +
geom_errorbar(aes(ymin=tgc$nbHesit-tgc$se, ymax=tgc$nbHesit+tgc$se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
#  ggtitle("Proportion d'hésitations en rappel libre")
p <- p + ylab("PROP HESIT (%)")+ labs(fill='CONDITION') + xlab('JOUR')
p <- p + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
plot.title = element_text(family = "Helvetica", face = "bold", size = (20)),
legend.title=element_text(size=18), legend.text = element_text(size=16))
p
###################################################### tableau de donnees #######################################
# effet aléatoire différent selon le jour 10.15298  0.0014
# pas d'interaction 5.730498  0.1255
# pas condition 1.471167  0.6889
# pas jour 0.1246253  0.7241
setwd("~/Documents/Alex/Stat/")
source("summarySE.r")
tab <- read.table("../Transcription/csvFiles/brutDebit.csv",sep=",",header=TRUE)
# pê pédalage pieds != mains lbres
# pê mains contraintes != pédalage pieds
### type variable
tab$jour[tab$jour=="1"]<-"J1"
tab$jour[tab$jour=="2"]<-"J2"
tab$jour[tab$jour=="3"]<-"J3"
tab$jour <- as.factor(as.character(tab$jour))
tab$id <- as.factor(as.character(tab$id))
tab$histoire <- as.factor(as.character(tab$histoire))
tab$condition[tab$condition=="0"] <- "MAINS_LIBRES"
tab$condition[tab$condition=="1"] <- "MAINS_CONTRAINTES"
tab$condition[tab$condition=="2"] <- "PEDALAGE_PIEDS"
tab$condition[tab$condition=="3"] <- "PEDALAGE_MAINS"
tab$condition <- factor(tab$condition,levels = c("MAINS_LIBRES", "PEDALAGE_PIEDS", "PEDALAGE_MAINS","MAINS_CONTRAINTES"))
tab$condition <- as.factor(tab$condition)
### packages utilises
library(multcomp)
library(nlme)
library(ggplot2)
###################################################### statistiques descriptives #######################################
tgc <- summarySE(tab, measurevar="propHesit", groupvars=c("jour","condition"))
p<-ggplot(data=tgc, aes(x=jour, y=propHesit, fill=condition)) +
scale_fill_brewer() + theme_bw() +
geom_bar(position=position_dodge(), stat="identity",colour="black") +
geom_errorbar(aes(ymin=tgc$propHesit-tgc$se, ymax=tgc$propHesit+tgc$se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
#  ggtitle("Proportion d'hésitations en rappel libre")
p <- p + ylab("PROP HESIT (%)")+ labs(fill='CONDITION') + xlab('JOUR')
p <- p + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
plot.title = element_text(family = "Helvetica", face = "bold", size = (20)),
legend.title=element_text(size=18), legend.text = element_text(size=16))
p
###################################################### tableau de donnees #######################################
# nbPauses
# peut être effet de var ipu et var deb, pas d'effet de la moyenne
# pas d'effet SDTD ou meanIPU ?
# durée des pauses -> histogramme par condition
setwd("~/Documents/Alex/Stat/")
source("summarySE.r")
tab <- read.table("../Transcription/csvFiles/brutSyll.csv",sep=",",header=TRUE)
### type va
###################################################### tableau de donnees #######################################
# nbPauses
# peut être effet de var ipu et var deb, pas d'effet de la moyenne
# pas d'effet SDTD ou meanIPU ?
# durée des pauses -> histogramme par condition
setwd("~/Documents/Alex/Stat/")
source("summarySE.r")
tab <- read.table("../Transcription/csvFiles/brutSyll.csv",sep=",",header=TRUE)
### type variable
tab$jour <- as.factor(as.character(tab$jour))
tab$id <- as.factor(as.character(tab$id))
tab$histoire <- as.factor(as.character(tab$histoire))
tab$condition[tab$condition=="0"] <- "mains libres"
tab$condition[tab$condition=="1"] <- "mains contraintes"
tab$condition[tab$condition=="2"] <- "pédalage pieds"
tab$condition[tab$condition=="3"] <- "pédalage mains"
tab$condition <- as.factor(tab$condition)
tab
### packages utilises
library(multcomp)
library(nlme)
library(ggplot2)
lm_eqn <- function(df,v1,v2){
m <- lm(v1 ~ v2, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
b <- ggplot(tab, aes(x = tab$meanDeb, y=tab$SpeechRate))
b<- b + geom_point() # rajouter y dans le ggplot de base
b<- b+geom_smooth(method = "lm")
b <-b + geom_text(x = 2, y = 4, label = lm_eqn(tab,tab$meanDeb,tab$SpeechRate), parse = TRUE)
b
###################################################### statistiques descriptives #######################################
tgc <- summarySE(tab, measurevar="nbPauses", groupvars=c("jour","condition"))
p<-ggplot(data=tgc, aes(x=jour, y=nbPauses, fill=condition)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=tgc$nbPauses-tgc$se, ymax=tgc$nbPauses+tgc$se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
#  ggtitle("mean IPU")
p <- p + ylab("mean ipu")+ labs(fill='condition')
p <- p + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
plot.title = element_text(family = "Helvetica", face = "bold", size = (20)),
legend.title=element_text(size=18), legend.text = element_text(size=16))
p
tgc <- summarySE(tab, measurevar="nbSyll", groupvars=c("jour","condition"))
p<-ggplot(data=tgc, aes(x=jour, y=nbSyll, fill=condition)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=tgc$nbSyll-tgc$se, ymax=tgc$nbSyll+tgc$se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
#  ggtitle("mean IPU")
p <- p + ylab("mean ipu")+ labs(fill='condition')
p <- p + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
plot.title = element_text(family = "Helvetica", face = "bold", size = (20)),
legend.title=element_text(size=18), legend.text = element_text(size=16))
p
###################################################### tableau de donnees #######################################
# nbPauses
# peut être effet de var ipu et var deb, pas d'effet de la moyenne
# pas d'effet SDTD ou meanIPU ?
# durée des pauses -> histogramme par condition
setwd("~/Documents/Alex/Stat/")
source("summarySE.r")
tab <- read.table("../Transcription/csvFiles/brutSyll.csv",sep=",",header=TRUE)
### type variable
tab$jour <- as.factor(as.character(tab$jour))
tab$id <- as.factor(as.character(tab$id))
tab$histoire <- as.factor(as.character(tab$histoire))
tab$condition[tab$condition=="0"] <- "mains libres"
tab$condition[tab$condition=="1"] <- "mains contraintes"
tab$condition[tab$condition=="2"] <- "pédalage pieds"
tab$condition[tab$condition=="3"] <- "pédalage mains"
tab$condition <- as.factor(tab$condition)
tab
### packages utilises
library(multcomp)
library(nlme)
library(ggplot2)
lm_eqn <- function(df,v1,v2){
m <- lm(v1 ~ v2, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
b <- ggplot(tab, aes(x = tab$meanDeb, y=tab$SpeechRate))
b<- b + geom_point() # rajouter y dans le ggplot de base
b<- b+geom_smooth(method = "lm")
b <-b + geom_text(x = 2, y = 4, label = lm_eqn(tab,tab$meanDeb,tab$SpeechRate), parse = TRUE)
b
###################################################### statistiques descriptives #######################################
tgc <- summarySE(tab, measurevar="nbSyll", groupvars=c("jour","condition"))
p<-ggplot(data=tgc, aes(x=jour, y=nbSyll, fill=condition)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=tgc$nbSyll-tgc$se, ymax=tgc$nbSyll+tgc$se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
#  ggtitle("mean IPU")
p <- p + ylab("mean ipu")+ labs(fill='condition')
p <- p + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
plot.title = element_text(family = "Helvetica", face = "bold", size = (20)),
legend.title=element_text(size=18), legend.text = element_text(size=16))
p
tgc <- summarySE(tab, measurevar="nbPauses", groupvars=c("jour","condition"))
p<-ggplot(data=tgc, aes(x=jour, y=nbPauses, fill=condition)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=tgc$nbPauses-tgc$se, ymax=tgc$nbPauses+tgc$se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
#  ggtitle("mean IPU")
p <- p + ylab("mean ipu")+ labs(fill='condition')
p <- p + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
plot.title = element_text(family = "Helvetica", face = "bold", size = (20)),
legend.title=element_text(size=18), legend.text = element_text(size=16))
p
tgc <- summarySE(tab, measurevar="meanPauses", groupvars=c("jour","condition"))
p<-ggplot(data=tgc, aes(x=jour, y=meanPauses, fill=condition)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=tgc$meanPauses-tgc$se, ymax=tgc$meanPauses+tgc$se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
#  ggtitle("mean IPU")
p <- p + ylab("mean ipu")+ labs(fill='condition')
p <- p + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
plot.title = element_text(family = "Helvetica", face = "bold", size = (20)),
legend.title=element_text(size=18), legend.text = element_text(size=16))
p
tgc <- summarySE(tab, measurevar="varPauses", groupvars=c("jour","condition"))
p<-ggplot(data=tgc, aes(x=jour, y=varPauses, fill=condition)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=tgc$varPauses-tgc$se, ymax=tgc$varPauses+tgc$se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
#  ggtitle("mean IPU")
p <- p + ylab("mean ipu")+ labs(fill='condition')
p <- p + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
plot.title = element_text(family = "Helvetica", face = "bold", size = (20)),
legend.title=element_text(size=18), legend.text = element_text(size=16))
p
tgc <- summarySE(tab, measurevar="SRAR", groupvars=c("jour","condition"))
p<-ggplot(data=tgc, aes(x=jour, y=SRAR, fill=condition)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=tgc$SRAR-tgc$se, ymax=tgc$SRAR+tgc$se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
#  ggtitle("mean IPU")
p <- p + ylab("mean ipu")+ labs(fill='condition')
p <- p + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
plot.title = element_text(family = "Helvetica", face = "bold", size = (20)),
legend.title=element_text(size=18), legend.text = element_text(size=16))
p
tgc <- summarySE(tab, measurevar="SpeechRate", groupvars=c("jour","condition"))
p<-ggplot(data=tgc, aes(x=jour, y=SpeechRate, fill=condition)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=tgc$SpeechRate-tgc$se, ymax=tgc$SpeechRate+tgc$se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
#  ggtitle("mean IPU")
p <- p + ylab("mean ipu")+ labs(fill='condition')
p <- p + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
plot.title = element_text(family = "Helvetica", face = "bold", size = (20)),
legend.title=element_text(size=18), legend.text = element_text(size=16))
p
tgc <- summarySE(tab, measurevar="ArticulationRate", groupvars=c("jour","condition"))
p<-ggplot(data=tgc, aes(x=jour, y=ArticulationRate, fill=condition)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=tgc$ArticulationRate-tgc$se, ymax=tgc$ArticulationRate+tgc$se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
#  ggtitle("mean IPU")
p <- p + ylab("mean ipu")+ labs(fill='condition')
p <- p + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
plot.title = element_text(family = "Helvetica", face = "bold", size = (20)),
legend.title=element_text(size=18), legend.text = element_text(size=16))
p
